"""Scheduler engine for the StudyBuddy Scheduler.

This script defines the SchedulerEngine class, which generates study
schedules using different strategies.
"""

from datetime import datetime
from scheduler.strategy import EvenDistributionStrategy, UrgencyStrategy
from scheduler.pomodoro import PomodoroScheduler

class SchedulerEngine:
    """Engine for generating study schedules using different strategies.

    Supports Pomodoro, urgency-based, and even distribution strategies.
    """

    def __init__(self, strategy="even"):
        """Initializes the SchedulerEngine with a specified strategy.

        Args:
            strategy (str): The scheduling strategy to use. Options are
                'pomodoro', 'urgency', or 'even'. Defaults to 'even'.
        """
        self.strategy = strategy
        
    def generate_schedule(self, courses):
        """Generates a schedule based on the selected strategy.

        Args:
            courses (list of dict): List of courses, where each course is a
                dictionary containing 'course', 'deadline', and 'hours' keys.

        Returns:
            list of dict: A list of schedule blocks generated by the selected strategy.

        Raises:
            ValueError: If an unknown strategy is specified.
        """
        if self.strategy == "pomodoro":
            return PomodoroScheduler().schedule(courses)
        elif self.strategy == "urgency":
            return UrgencyStrategy().schedule(courses)
        elif self.strategy == "even":
            return EvenDistributionStrategy().schedule(courses)
        else:
            raise ValueError(f"Unknown strategy: {self.strategy}")